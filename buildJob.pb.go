// Code generated by protoc-gen-go. DO NOT EDIT.
// source: buildJob.proto

/*
Package main is a generated protocol buffer package.

It is generated from these files:
	buildJob.proto

It has these top-level messages:
	BuildJobRequest
	Apk
	BuildJobResponse
*/
package main

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type BuildJobRequest struct {
	Task     string `protobuf:"bytes,1,opt,name=task" json:"task,omitempty"`
	Gradlew  string `protobuf:"bytes,2,opt,name=gradlew" json:"gradlew,omitempty"`
	Manifest string `protobuf:"bytes,3,opt,name=manifest" json:"manifest,omitempty"`
	Output   string `protobuf:"bytes,4,opt,name=output" json:"output,omitempty"`
	ProjPath string `protobuf:"bytes,5,opt,name=projPath" json:"projPath,omitempty"`
}

func (m *BuildJobRequest) Reset()                    { *m = BuildJobRequest{} }
func (m *BuildJobRequest) String() string            { return proto.CompactTextString(m) }
func (*BuildJobRequest) ProtoMessage()               {}
func (*BuildJobRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *BuildJobRequest) GetTask() string {
	if m != nil {
		return m.Task
	}
	return ""
}

func (m *BuildJobRequest) GetGradlew() string {
	if m != nil {
		return m.Gradlew
	}
	return ""
}

func (m *BuildJobRequest) GetManifest() string {
	if m != nil {
		return m.Manifest
	}
	return ""
}

func (m *BuildJobRequest) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *BuildJobRequest) GetProjPath() string {
	if m != nil {
		return m.ProjPath
	}
	return ""
}

type Apk struct {
	Path    string `protobuf:"bytes,1,opt,name=path" json:"path,omitempty"`
	RawSize int64  `protobuf:"varint,2,opt,name=rawSize" json:"rawSize,omitempty"`
	Size    string `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"`
	ModTime string `protobuf:"bytes,4,opt,name=modTime" json:"modTime,omitempty"`
}

func (m *Apk) Reset()                    { *m = Apk{} }
func (m *Apk) String() string            { return proto.CompactTextString(m) }
func (*Apk) ProtoMessage()               {}
func (*Apk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Apk) GetPath() string {
	if m != nil {
		return m.Path
	}
	return ""
}

func (m *Apk) GetRawSize() int64 {
	if m != nil {
		return m.RawSize
	}
	return 0
}

func (m *Apk) GetSize() string {
	if m != nil {
		return m.Size
	}
	return ""
}

func (m *Apk) GetModTime() string {
	if m != nil {
		return m.ModTime
	}
	return ""
}

type BuildJobResponse struct {
	Apks    []*Apk `protobuf:"bytes,1,rep,name=apks" json:"apks,omitempty"`
	Success bool   `protobuf:"varint,2,opt,name=success" json:"success,omitempty"`
}

func (m *BuildJobResponse) Reset()                    { *m = BuildJobResponse{} }
func (m *BuildJobResponse) String() string            { return proto.CompactTextString(m) }
func (*BuildJobResponse) ProtoMessage()               {}
func (*BuildJobResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BuildJobResponse) GetApks() []*Apk {
	if m != nil {
		return m.Apks
	}
	return nil
}

func (m *BuildJobResponse) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func init() {
	proto.RegisterType((*BuildJobRequest)(nil), "main.BuildJobRequest")
	proto.RegisterType((*Apk)(nil), "main.Apk")
	proto.RegisterType((*BuildJobResponse)(nil), "main.BuildJobResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Builder service

type BuilderClient interface {
	Build(ctx context.Context, in *BuildJobRequest, opts ...grpc.CallOption) (*BuildJobResponse, error)
}

type builderClient struct {
	cc *grpc.ClientConn
}

func NewBuilderClient(cc *grpc.ClientConn) BuilderClient {
	return &builderClient{cc}
}

func (c *builderClient) Build(ctx context.Context, in *BuildJobRequest, opts ...grpc.CallOption) (*BuildJobResponse, error) {
	out := new(BuildJobResponse)
	err := grpc.Invoke(ctx, "/main.Builder/Build", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Builder service

type BuilderServer interface {
	Build(context.Context, *BuildJobRequest) (*BuildJobResponse, error)
}

func RegisterBuilderServer(s *grpc.Server, srv BuilderServer) {
	s.RegisterService(&_Builder_serviceDesc, srv)
}

func _Builder_Build_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(BuildJobRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BuilderServer).Build(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/main.Builder/Build",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BuilderServer).Build(ctx, req.(*BuildJobRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Builder_serviceDesc = grpc.ServiceDesc{
	ServiceName: "main.Builder",
	HandlerType: (*BuilderServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Build",
			Handler:    _Builder_Build_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "buildJob.proto",
}

func init() { proto.RegisterFile("buildJob.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 271 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x5c, 0x51, 0xcb, 0x4e, 0xeb, 0x30,
	0x10, 0xbd, 0xb9, 0x49, 0x5f, 0x83, 0x04, 0xc8, 0x12, 0x95, 0x55, 0x09, 0xa9, 0xca, 0xaa, 0xab,
	0x2c, 0xca, 0x86, 0x6d, 0x61, 0x07, 0x1b, 0x14, 0xf8, 0x01, 0xa7, 0x31, 0x10, 0xd2, 0xc4, 0xc6,
	0x63, 0xab, 0x12, 0x3f, 0xc1, 0x2f, 0xa3, 0x99, 0xc4, 0x20, 0x75, 0x77, 0x1e, 0xf3, 0x38, 0x1e,
	0xc3, 0x79, 0x15, 0x9a, 0x43, 0xfd, 0x60, 0xaa, 0xc2, 0x3a, 0xe3, 0x8d, 0xc8, 0x3a, 0xd5, 0xf4,
	0xf9, 0x77, 0x02, 0x17, 0x77, 0xa3, 0x51, 0xea, 0xcf, 0xa0, 0xd1, 0x0b, 0x01, 0x99, 0x57, 0xd8,
	0xca, 0x64, 0x9d, 0x6c, 0x16, 0x25, 0x63, 0x21, 0x61, 0xf6, 0xe6, 0x54, 0x7d, 0xd0, 0x47, 0xf9,
	0x9f, 0xe5, 0x48, 0xc5, 0x0a, 0xe6, 0x9d, 0xea, 0x9b, 0x57, 0x8d, 0x5e, 0xa6, 0x6c, 0xfd, 0x72,
	0xb1, 0x84, 0xa9, 0x09, 0xde, 0x06, 0x2f, 0x33, 0x76, 0x46, 0x46, 0x3d, 0xd6, 0x99, 0x8f, 0x27,
	0xe5, 0xdf, 0xe5, 0x64, 0xe8, 0x89, 0x3c, 0x57, 0x90, 0xee, 0x6c, 0x4b, 0x21, 0x2c, 0xd9, 0x63,
	0x08, 0xc2, 0x14, 0xc2, 0xa9, 0xe3, 0x73, 0xf3, 0xa5, 0x39, 0x44, 0x5a, 0x46, 0x4a, 0xd5, 0x48,
	0xf2, 0x10, 0x80, 0x31, 0x55, 0x77, 0xa6, 0x7e, 0x69, 0x3a, 0x3d, 0x6e, 0x8f, 0x34, 0x7f, 0x84,
	0xcb, 0xbf, 0x37, 0xa3, 0x35, 0x3d, 0x6a, 0x71, 0x0d, 0x99, 0xb2, 0x2d, 0xca, 0x64, 0x9d, 0x6e,
	0xce, 0xb6, 0x8b, 0x82, 0xae, 0x53, 0xec, 0x6c, 0x5b, 0xb2, 0x4c, 0xc3, 0x30, 0xec, 0xf7, 0x1a,
	0x91, 0x57, 0xcf, 0xcb, 0x48, 0xb7, 0xf7, 0x30, 0xe3, 0x61, 0xda, 0x89, 0x5b, 0x98, 0x30, 0x14,
	0x57, 0x43, 0xfb, 0xc9, 0x61, 0x57, 0xcb, 0x53, 0x79, 0xd8, 0x9d, 0xff, 0xab, 0xa6, 0xfc, 0x27,
	0x37, 0x3f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x7f, 0xb8, 0xa0, 0x6a, 0xa5, 0x01, 0x00, 0x00,
}
